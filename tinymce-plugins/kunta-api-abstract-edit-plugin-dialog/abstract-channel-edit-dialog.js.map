{"version":3,"sources":["../src/kunta-api-abstract-edit-plugin-dialog/js/abstract-channel-edit-dialog.js"],"names":["$","AbstractServiceChannelEditorDialog","editor","serviceChannel","locale","channel","formValues","updatedChannel","serviceHourTexts","serviceHours","map","serviceHour","formatServiceHour","empty","length","forEach","serviceHourText","row","appendTo","html","append","addClass","additionalInformation","isClosed","type","validForNow","toTime","fromTime","openingHour","push","dayFrom","dayTo","from","to","isExtra","supportedLocales","value","language","serviceHourType","validFrom","parseIsoDate","validTo","JSON","parse","parseInt","day","serviceHourFromFormException","serviceHourFromFormStandard","serviceHourFromFormSpecial","moment","open24h","validFromStr","format","validToStr","openingHours","openFrom","openTo","exceptionType","parts","split","hour","minute","result","getLocalizedValue","Error","callback","viewModel","getServiceHourMetaform","serviceHourToForm","dialog","openMetaformDialog","prepareViewModel","newFormValues","updatedServiceHour","serviceHourFromForm","getServiceChannelFormViewModel","serviceChannelToForm","trigger","openLocalizedMetaformDialog","serviceChannelFromForm","serviceLocationServiceChannel","validationError","validate","showError","saveChannel","then","catch","err","window","KuntaApiAbstractEditDialog","jQuery"],"mappings":"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","file":"abstract-channel-edit-dialog.js","sourcesContent":["/* global ajaxurl, moment, Promise */\n(($) => {\n  'use strict';\n  \n  class AbstractServiceChannelEditorDialog extends window.KuntaApiAbstractEditDialog {\n    \n    /**\n     * Constructs class\n     * \n     * @param {Object} editor TinyMCE editor instance\n     * @param {Object} serviceChannel service channel\n     */\n    constructor(editor, serviceChannel) {\n      super(editor);\n      this.serviceChannel = serviceChannel;\n    }\n    \n    /**\n     * Translates service channel to be suitable for form\n     * \n     * @param {String} locale locale\n     * @param {Object} channel channel object\n     * @returns {Object} form data\n     */\n    serviceChannelToForm(locale, channel) {\n      return {};\n    }\n    \n    /**\n     * Translates form values to service channel\n     * \n     * @param {type} channel original channel data\n     * @param {type} formValues form values\n     * @returns {Object} updated service\n     */\n    serviceChannelFromForm(channel, formValues) {\n      return {};  \n    }\n    \n    /**\n     * Returns main form for service channel\n     * \n     * @returns {Object} metaform\n     */\n    getServiceChannelFormViewModel() {\n      return null;\n    }\n    \n    /**\n     * Validates updated service channel. returns validation error message or null if servie channel is valid\n     * \n     * @param {Object} serviceChannel\n     * @returns {String} validation error message or null if servie channel is valid\n     */\n    validate(serviceChannel) {\n      return null;  \n    }\n    \n    /**\n     * Saves the channel\n     * \n     * @param updatedChannel channel data\n     * @returns {Promise} promise for save result\n     */\n    saveChannel(updatedChannel) {\n      return null;\n    }\n    \n    /**\n     * Redraws service hours table\n     */\n    redrawServiceHours() {\n      const serviceHourTexts = this.serviceChannel.serviceHours.map((serviceHour) => {\n        return this.formatServiceHour(serviceHour);\n      });\n      \n      $('table.serviceHours tbody').empty();\n      \n      if (serviceHourTexts.length) {\n        serviceHourTexts.forEach((serviceHourText) => {\n          const row = $('<tr>').appendTo($('table.serviceHours tbody'));\n          $('<td>').html(serviceHourText).appendTo(row);\n          $('<td>').append($('<a>').addClass('btn btn-sm btn-warning remove-service-hour').html('Poista')).appendTo(row);\n          $('<td>').append($('<a>').addClass('btn btn-sm btn-success edit-service-hour').html('Muokkaa')).appendTo(row);\n        });\n      } else {\n        $('<tr>')\n          .append($('<td>').html('Palveluaikoja ei ole vielä määritelty'))\n          .appendTo($('table.serviceHours tbody'));\n      }\n    }\n    \n    serviceHourFromFormException(formValues) {\n      const additionalInformation = [];\n      const isClosed = formValues.type === 'closed-all-day';\n      const validForNow = false;\n      const toTime = isClosed ? null : formValues[`Exception-to-time`];\n      const fromTime = isClosed ? null : formValues[`Exception-from-time`];\n      const openingHour = [];\n      \n      if (toTime || fromTime) {\n        openingHour.push({\n          dayFrom: null,\n          dayTo: null,\n          from: fromTime,\n          to: toTime,\n          isExtra: false\n        });\n      }\n      \n      this.supportedLocales.forEach((locale) => {\n        const value = formValues[`Exception-additional-information-${locale}`];\n        if (value) {\n          additionalInformation.push({\n            language: locale,\n            value: value\n          });  \n        }\n      });\n      \n      return {\n        serviceHourType: formValues.type,\n        validFrom: this.parseIsoDate(formValues[`Exception-from-date`]),\n        validTo: this.parseIsoDate(formValues[`Exception-to-date`]),\n        isClosed: isClosed,\n        validForNow: validForNow,\n        additionalInformation: additionalInformation,\n        openingHour: openingHour\n      };\n    }\n    \n    serviceHourFromFormStandard(formValues) {\n      const isClosed = false;\n      const validForNow = formValues[`${formValues.type}-validForNow`] === \"true\";\n      const additionalInformation = [];\n      const serviceHours = JSON.parse(formValues['Standard-openinghours']);\n      const openingHour = formValues['Standard-open24h'] ? [] : serviceHours.map((serviceHour) => {\n        return {\n          dayFrom: parseInt(serviceHour.day),\n          dayTo: parseInt(serviceHour.day),\n          from: serviceHour.from,\n          to: serviceHour.to,\n          isExtra: false\n        };\n      });\n      \n      return {\n        serviceHourType: formValues.type,\n        validFrom: validForNow ? null : this.parseIsoDate(formValues[`${formValues.type}-validFrom`]),\n        validTo: validForNow ? null : this.parseIsoDate(formValues[`${formValues.type}-validTo`]),\n        isClosed: isClosed,\n        validForNow: validForNow,\n        additionalInformation: additionalInformation,\n        openingHour: openingHour\n      };\n    }\n    \n    serviceHourFromFormSpecial(formValues) {\n      const isClosed = false;\n      const validForNow = formValues[`${formValues.type}-validForNow`] === \"true\";\n      const additionalInformation = [];\n      const openingHour = [{\n        dayFrom: parseInt(formValues['Special-from-date']),\n        dayTo: parseInt(formValues['Special-to-date']),\n        from: formValues['Special-from-time'],\n        to: formValues['Special-to-time'],\n        isExtra: false\n      }];\n    \n      return {\n        serviceHourType: formValues.type,\n        validFrom: validForNow ? null : this.parseIsoDate(formValues[`${formValues.type}-validFrom`]),\n        validTo: validForNow ? null : this.parseIsoDate(formValues[`${formValues.type}-validTo`]),\n        isClosed: isClosed,\n        validForNow: validForNow,\n        additionalInformation: additionalInformation,\n        openingHour: openingHour\n      };\n    }\n    \n    serviceHourFromForm(formValues) {\n      const serviceHourType = formValues.type;\n      switch (serviceHourType) {\n        case \"Exception\":\n          return this.serviceHourFromFormException(formValues);\n        case \"Standard\":\n          return this.serviceHourFromFormStandard(formValues);\n        case \"Special\":\n          return this.serviceHourFromFormSpecial(formValues);\n      };\n    }\n    \n    serviceHourToForm(serviceHour) {\n      if (!serviceHour) {\n        return {};\n      }\n      \n      const type = serviceHour.serviceHourType;\n      const validForNow = serviceHour.validForNow ? \"true\" : \"false\";\n      const validFrom = serviceHour.validForNow || !serviceHour.validFrom ? null : moment(serviceHour.validFrom);\n      const validTo = serviceHour.validForNow || !serviceHour.validTo ? null : moment(serviceHour.validTo);\n      const open24h = serviceHour.openingHour.length === 0 && !serviceHour.isClosed;\n      const validFromStr = validFrom ? validFrom.format() : null;\n      const validToStr = validTo ? validTo.format() : null;\n      const openingHour = serviceHour.openingHour && serviceHour.openingHour.length ? serviceHour.openingHour[0] : null;\n      const openingHours = [];\n          \n      (serviceHour.openingHour||[]).forEach((openingHour) => {\n        for (let day = openingHour.dayFrom; day <= openingHour.dayTo; day++) {\n          openingHours.push({\n            day: day,\n            from: openingHour.from,\n            to: openingHour.to\n          });\n        };\n      });\n      \n      switch (type) {\n        case 'Standard':\n          return {\n            'type': type,\n            'Standard-validForNow': validForNow,\n            'Standard-validFrom': validFromStr,\n            'Standard-validTo': validToStr,\n            'Standard-open24h': open24h,\n            'Standard-openinghours': openingHours\n          };\n        case 'Special':\n          return {\n            'type': type,\n            'Special-validForNow': validForNow,\n            'Special-validFrom': validFromStr,\n            'Special-validTo': validToStr,\n            'Special-from-date': openingHour ? openingHour.dayFrom : null,\n            'Special-from-time': openingHour ? openingHour.from : null,\n            'Special-to-date': openingHour ? openingHour.dayTo : null,\n            'Special-to-time': openingHour ? openingHour.to : null\n          };\n        case 'Exception':\n          const openFrom = openingHour ? openingHour.from : null;\n          const openTo = openingHour ? openingHour.to : null;\n          const exceptionType = !validTo ? !openFrom && !openTo ? 'closed-all-day' : 'single' : 'range';\n          \n          if (validFrom && openFrom) {\n            const parts = openFrom.split(':');\n            validFrom.hour(parseInt(parts[0]));\n            validFrom.minute(parseInt(parts[1]));\n          }\n          \n          if (validTo && openTo) {\n            const parts = openTo.split(':');\n            validTo.hour(parseInt(parts[0]));\n            validTo.minute(parseInt(parts[1]));\n          }\n          \n          const result = {\n            'type': type,\n            'Exception-type': exceptionType,\n            'Exception-from-date': validFrom ? validFrom.format() : null,\n            'Exception-to-date': validTo ? validTo.format() : null,\n            'Exception-from-time': openFrom,\n            'Exception-to-time': openTo\n          };\n          \n          this.supportedLocales.forEach((locale) => {\n            result[`Exception-additional-information-${locale}`] = this.getLocalizedValue(serviceHour.additionalInformation, locale);\n          });\n          \n          return result;\n        default:\n          throw new Error(`Unknown service hour type ${type}`);\n        break;\n      }\n    }\n    \n    openServiceHourEditDialog(serviceHour, callback) {\n      const viewModel = getServiceHourMetaform();\n      const formValues = this.serviceHourToForm(serviceHour);\n      const dialog = this.openMetaformDialog(this.prepareViewModel(viewModel), formValues, (newFormValues) => {\n        const updatedServiceHour = this.serviceHourFromForm(newFormValues);\n        callback(updatedServiceHour);\n      });\n    }\n    \n    /**\n     * Opens channel editor\n     */\n    open() {\n      const viewModel = this.getServiceChannelFormViewModel();\n      const formValues = {};\n      this.supportedLocales.map((locale) => {\n        formValues[locale] = this.serviceChannelToForm(locale);\n      });\n      \n      this.trigger(\"beforeDialogOpen\");\n      \n      const dialog = this.openLocalizedMetaformDialog(viewModel, formValues, (newFormValues) => {\n        dialog.dialog(\"widget\").addClass('loading');\n        \n        const updatedChannel = this.serviceChannelFromForm(this.serviceLocationServiceChannel, newFormValues);\n        const validationError = this.validate(updatedChannel);\n        \n        if (validationError !== null) {\n          this.showError('Virheellinen syöte', validationError);\n        } else {\n          this.saveChannel(updatedChannel)\n            .then(() => {\n              this.serviceChannel = updatedChannel;\n              dialog.dialog('close'); \n            })\n            .catch((err) => {\n              this.showError('Virhe tallentaessa', err);\n            });\n        }\n      });\n      \n      this.trigger(\"afterDialogOpen\", {\n        dialog: dialog\n      });\n    }\n  }\n  \n  window.AbstractServiceChannelEditorDialog = AbstractServiceChannelEditorDialog;\n  \n})(jQuery);"]}