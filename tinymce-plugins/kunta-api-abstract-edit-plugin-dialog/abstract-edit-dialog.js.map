{"version":3,"sources":["../src/kunta-api-abstract-edit-plugin-dialog/js/abstract-edit-dialog.js"],"names":["$","KuntaApiAbstractEditDialog","editor","supportedLocales","localeNames","serviceHourTypeNames","dayNames","listeners","locale","type","index","short","name","substring","serviceHour","getServiceHourTypeName","serviceHourType","result","isClosed","openingHour","length","openFrom","from","openTo","to","validFrom","validTo","formatDateWithTime","formatDateWithTimes","additionalInformation","getAnyLocalizedValue","openingHours","map","formatOpeningHour","join","dateTime","moment","format","date","time","formatDate","startTime","endTime","start","dailyOpeningTime","dayFrom","getDayName","dayTo","viewModel","formValues","callback","dialog","attr","title","dialogContents","addClass","html","mfRender","appendTo","modal","draggable","width","window","height","buttons","text","click","find","metaform","forEach","value","dialogTabs","tabId","append","getLocaleName","tabs","id","console","log","Promise","resolve","reject","post","ajaxurl","response","JSON","parse","fail","responseText","statusText","types","search","codes","codeItem","getLocalizedValue","names","getCodeTypeName","municipality","contents","Ok","values","i","language","property","resultProperty","localeValues","formProperty","push","filterFunction","mapFunction","tableValues","filter","mappedValues","Object","assign","concat","sections","section","fields","field","localeVariableIndex","indexOf","splice","replace","string","Date","element","languageCodes","metaformMultivalueAutocomplete","input","searchCodes","term","then","code","label","catch","err","tinyMCE","activeEditor","windowManager","alert","areaCodes","areaCode","getCodeNameWithType","languages","languageQuery","languageQueryResult","languageMap","queryResult","areas","area","municipalities","getMunicipalityNameWithType","areaType","mucicipalitiesIndex","split","parts","searchTerms","_","event","data","listener","callable","jQuery"],"mappings":"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","file":"abstract-edit-dialog.js","sourcesContent":["/* jshint esversion: 6 */\n/* global ajaxurl, moment, Promise */\n(($) => {\n  \n  class KuntaApiAbstractEditDialog {\n    \n    /**\n     * Constructs abstract dialog class\n     * \n     * @param {type} editor TinyMCE editor instance\n     */\n    constructor(editor) {\n      this.supportedLocales = ['fi', 'en', 'sv'];\n      this.localeNames = {\n        'fi': 'Suomi',\n        'en': 'Englanti',\n        'sv': 'Ruotsi'\n      };\n      \n      this.serviceHourTypeNames = {\n        'Special': 'Päivystys',\n        'Standard': 'Normaali',\n        'Exception': 'Poikkeus'\n      };\n      \n      this.dayNames = {\n        0: 'Sunnuntai',\n        1: 'Maanantai',\n        2: 'Tiistai',\n        3: 'Keskiviikko',\n        4: 'Torstai',\n        5: 'Perjantai',\n        6: 'Lauantai'\n      };\n      \n      this.editor = editor;\n      this.listeners = [];\n    }\n    \n    getLocaleName(locale) {\n      return this.localeNames[locale];\n    }\n    \n    getServiceHourTypeName(type) {\n      return this.serviceHourTypeNames[type];\n    }\n    \n    getDayName(index, short) {\n      const name = this.dayNames[index];\n      if (short) {\n        return name.substring(0, 2);\n      }\n      \n      return name;\n    }\n    \n    formatServiceHour(serviceHour) {\n      const type = this.getServiceHourTypeName(serviceHour.serviceHourType);\n      if (serviceHour.serviceHourType === 'Exception') {\n        let result = `(${type})`;\n        \n        if (serviceHour.isClosed) {\n          result += ' Suljettu';\n        }\n        \n        const openingHour = serviceHour.openingHour && serviceHour.openingHour.length ? serviceHour.openingHour[0] : null;\n        const openFrom = openingHour ? openingHour.from : null;\n        const openTo = openingHour ? openingHour.to : null;\n        \n        if (serviceHour.validFrom && serviceHour.validTo) {\n          result += ` ${this.formatDateWithTime(serviceHour.validFrom, openFrom)} - ${this.formatDateWithTime(serviceHour.validTo, openTo)}`;\n        } else if (serviceHour.validFrom) {\n          result += ` ${this.formatDateWithTimes(serviceHour.validFrom, openFrom, openTo)}`;\n        }\n        \n        const additionalInformation = this.getAnyLocalizedValue(serviceHour.additionalInformation);\n        if (additionalInformation) {\n          return `${result} - ${additionalInformation}`;\n        }\n        \n        return result;\n      } else {\n        if (serviceHour.openingHour.length === 0 && !serviceHour.isClosed) {\n          return `(${type}) Aina avoinna (24/7)`;\n        }\n        \n        const openingHours = serviceHour.openingHour.map((openingHour) => {\n          return this.formatOpeningHour(openingHour);\n        });\n\n        return `(${type}) ${openingHours.join(',')}`;\n      }\n    }\n    \n    formatDateTime(dateTime) {\n      return moment(dateTime).locale('fi').format('lll');\n    }\n    \n    formatDate(date) {\n      return moment(date).locale('fi').format('ll');\n    }\n    \n    formatDateWithTime(date, time) {\n      const result = this.formatDate(date);\n      if (time) {\n        return `${result} ${time}`;\n      }\n      \n      return result;\n    }\n    \n    formatDateWithTimes(date, startTime, endTime) {\n      const start = this.formatDateWithTime(date, startTime);\n      return endTime ? `${start} - ${endTime}` : start;\n    }\n    \n    formatOpeningHour(dailyOpeningTime) {\n      if (dailyOpeningTime.dayFrom === null) {\n        return '';\n      } else {\n        let result = this.getDayName(dailyOpeningTime.dayFrom, true);\n\n        if (dailyOpeningTime.dayTo !== null && dailyOpeningTime.dayTo !== dailyOpeningTime.dayFrom) {\n          result += ' - ' + this.getDayName(dailyOpeningTime.dayTo, true);\n        }\n\n        if (dailyOpeningTime.from) {\n          result += ' ' + dailyOpeningTime.from;\n        }\n\n        if (dailyOpeningTime.to) {\n          result += ' - ' + dailyOpeningTime.to;\n        }\n\n        return result;\n      }\n    }\n    \n    openMetaformDialog(viewModel, formValues, callback) {\n      const dialog = $('<div>')\n        .attr({\n          'title': viewModel.title\n        });\n      \n      const dialogContents = $('<div>')\n        .addClass('container-fluid')\n        .html(mfRender({\n          viewModel: viewModel,\n          formValues: formValues\n        }))\n        .appendTo(dialog);\n      \n      $(dialog).dialog({\n        modal: true,\n        draggable: false,\n        width: $(window).width() * 0.9,\n        height: $(window).height() * 0.9,\n        buttons: [{\n          text: \"Tallenna\",\n          click: () => {\n            const formValues = {};\n            \n            $(dialog).find(`form.metaform`).metaform('val', true).forEach((value) => {\n              formValues[value.name] = value.value;\n            });\n            \n            callback(formValues);\n            $(dialog).dialog(\"close\");\n          }\n        }, {\n          text: \"Peruuta\",\n          click: () => {\n            $(dialog).dialog(\"close\");\n          }\n        }]\n      });\n       \n      $(dialog).find('form.metaform').metaform();\n      \n      return dialog;\n    }\n    \n    openLocalizedMetaformDialog(viewModel, formValues, callback) {\n      const dialog = $('<div>')\n        .attr({\n          'title': viewModel.title\n        });\n      \n      const dialogContents = $('<div>')\n        .addClass('container-fluid')\n        .appendTo(dialog);\n      \n      const dialogTabs = $('<ul>').appendTo(dialogContents);\n     \n      this.supportedLocales.forEach((locale) => {\n        const tabId = `locale-tab-${locale}`;\n        \n        $('<li>')\n          .appendTo(dialogTabs)\n          .append($('<a>').attr('href', `#${tabId}`).text(this.getLocaleName(locale)));\n\n        $('<div>')\n          .attr('id', tabId)\n          .html(mfRender({\n            viewModel: viewModel,\n            formValues: formValues[locale]\n          }))\n          .appendTo(dialogContents);\n      });\n      \n      dialogContents.tabs();\n      \n      $(dialog).dialog({\n        modal: true,\n        draggable: false,\n        width: $(window).width() * 0.9,\n        height: $(window).height() * 0.9,\n        buttons: [{\n          text: \"Tallenna\",\n          click: () => {\n            const formValues = {};\n            this.supportedLocales.forEach((locale) => {\n              formValues[locale] = {};\n              $(dialog).find(`#locale-tab-${locale} form.metaform`).metaform('val', true).forEach((value) => {\n                formValues[locale][value.name] = value.value;\n              });\n            });\n            \n            callback(formValues);\n          }\n        }, {\n          text: \"Peruuta\",\n          click: () => {\n            $(dialog).dialog(\"close\");\n          }\n        }]\n      });\n       \n      $(dialog).find('form.metaform').metaform();\n      \n      return dialog;\n    }\n    \n    /**\n     * Finds an organization by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for organization\n     */\n    findOrganization(id) {\n      console.log(\"find o\", id);\n      \n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_find_organization',\n          'id': id\n        }, (response) => {\n          console.log(\"response\", response);\n          \n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          console.log(\"Hajos\", response);\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    searchCodes(types, search) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_search_codes',\n          'types': types,\n          'search': search\n        }, (response) => {\n          const codes = JSON.parse(response);\n          resolve(codes);\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });\n    }\n    \n    searchOrganizations(search) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_search_organizations',\n          'search': search\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });\n    }\n    \n    getCodeTypeName(type) {\n       switch (type) {\n        case 'Municipality':\n          return 'kunta';\n        case 'Province':\n          return 'maakunta';\n        case 'HospitalRegions':\n          return 'sairaanhoitopiiri';\n        case 'BusinessRegions':\n          return 'yrityspalvelujen seutualue';\n        case 'Country':\n          return 'maa';\n        case 'Language':\n          return 'kieli';\n        case 'Postal':\n          return 'postinumero';\n      }\n    }\n    \n    getCodeNameWithType(codeItem) {\n      const name = this.getLocalizedValue(codeItem.name || codeItem.names, 'fi');\n      const type = this.getCodeTypeName(codeItem.type);\n      return `${name} (${type})`;\n    }\n    \n    getMunicipalityNameWithType(municipality) {\n      const name = this.getLocalizedValue(municipality.names, 'fi');\n      const type = this.getCodeTypeName('Municipality');\n      return `${name} (${type})`;\n    }\n    \n    showError(title, text) {\n      const contents = $('<div>')\n        .addClass('error')\n        .text(text);\n      \n      const dialog = $('<div>')\n        .attr('title', title)\n        .append(contents)\n        .dialog({\n          modal: true,\n          draggable: false,\n          width: 600,\n          height: 350,\n          buttons: {\n            Ok: () => {\n              $(dialog).dialog( \"close\" );\n            }\n          }\n        });\n    }\n    \n    getTypedLocalizedValue(values, locale, type) {\n      if (!values) {\n        return null;\n      }\n      \n      for (let i = 0; i < values.length; i++) {\n        if (locale === values[i].language && type === values[i].type) {\n          return values[i].value;\n        }\n      }\n      \n      return null;\n    }\n    \n    /**\n     * Returns localized value\n     * \n     * @param {Array} values array containing localized values\n     * @param {String} locale Locale\n     * @param {String} property property containing value. Defaults to 'value'\n     * @returns {unresolved}\n     */\n    getLocalizedValue(values, locale, property) {\n      if (!values) {\n        return null;\n      }\n      \n      for (let i = 0; i < values.length; i++) {\n        if (locale === values[i].language) {\n          return values[i][property || 'value'];\n        }\n      }\n      \n      return null;\n    }\n    \n    getAnyLocalizedValue(values) {\n      for (let i = 0; i < this.supportedLocales.length; i++) {\n        const result = this.getLocalizedValue(values, this.supportedLocales[i]);\n        if (result) {\n          return result;\n        }\n      }\n      \n      return null;\n    }\n    \n    /**\n     * Sets localized value (e.g. service requirements) value\n     * \n     * @param {type} result result object\n     * @param {type} resultProperty result object property\n     * @param {type} localeValues locale values from form\n     * @param {type} formProperty form property\n     * @param {type} language locale\n     */\n    setLocalizedValue(result, resultProperty, localeValues, formProperty, language) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = [];\n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      for (let i = 0; i < result[resultProperty].length; i++) {\n        if (result[resultProperty][i].language === language) {\n          result[resultProperty][i].value = value;\n          return;\n        }\n      }\n      \n      result[resultProperty].push({\n        value: value,\n        language: language\n      });\n    }\n    \n    /**\n     * Sets typed localized value (e.g. service description) value\n     * \n     * @param {type} result result object\n     * @param {type} resultProperty result object property\n     * @param {type} localeValues locale values from form\n     * @param {type} formProperty form property\n     * @param {type} language locale\n     * @param {type} type type\n     */\n    setTypedLocalizedValue(result, resultProperty, localeValues, formProperty, language, type) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = [];\n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      for (let i = 0; i < result[resultProperty].length; i++) {\n        if (result[resultProperty][i].language === language && result[resultProperty][i].type === type) {\n          result[resultProperty][i].value = value;\n          return;\n        }\n      }\n      \n      result[resultProperty].push({\n        value: value,\n        language: language,\n        type: type\n      });\n    }\n    \n    setLocalizedTableValues(result, resultProperty, localeValues, formProperty, language, filterFunction, mapFunction) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = []; \n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      let tableValues = JSON.parse(value);\n      \n      if (filterFunction) {\n        tableValues = tableValues.filter(filterFunction);\n      }\n      \n      const mappedValues = tableValues.map(mapFunction ? mapFunction : (value) => {\n        return Object.assign({\n          language: language\n        }, value);\n      }) || [];\n      \n      result[resultProperty] = result[resultProperty].concat(mappedValues); \n    }\n    \n    prepareViewModel(viewModel) {\n      (viewModel.sections||[]).forEach((section) => {\n        (section.fields||[]).forEach((field, index) => {\n          const localeVariableIndex = field.name.indexOf('{LOCALE}');\n          if (localeVariableIndex !== -1) {\n            section.fields.splice(index, 1);\n            \n            this.supportedLocales.forEach((locale) => {\n              section.fields.splice(index, 0, Object.assign({}, field, {\n                name: field.name.replace(/\\{LOCALE\\}/g, locale),\n                title: field.title.replace(/\\{LOCALE\\}/g, this.getLocaleName(locale))\n              }));   \n            });\n          }\n        });\n      });\n      \n      return viewModel;\n    }\n    \n    parseIsoDate(string) {\n      if (!string) {\n        return null;\n      }\n      \n      return new Date(Date.parse(string));\n    }\n    \n    /**\n     * Creates autocomplete field for selecting languages\n     * \n     * @param {jQuery} element autocomplete element\n     * @param {Array} languageCodes language codes\n     */\n    createLanguagesAutocomplete(element, languageCodes) {\n      element\n        .metaformMultivalueAutocomplete('val', languageCodes)\n        .metaformMultivalueAutocomplete('option', 'customSource', (input, callback) => {\n          this.searchCodes(\"Language\", input.term + '*')\n            .then((codes) => {\n              callback(codes.map((codeItem) => {\n                return {\n                  value: codeItem.code,\n                  label: this.getLocalizedValue(codeItem.names, 'fi')\n                };\n              }));\n            })\n            .catch((err) => {\n              tinyMCE.activeEditor.windowManager.alert(err);\n            });\n        });\n    }\n    \n    /**\n     * Creates autocomplete field for selecting areas\n     * \n     * @param {jQuery} element autocomplete element\n     * @param {Array} areaCodes area codes\n     */\n    createAreasAutocomplete(element, areaCodes) {\n      element\n        .metaformMultivalueAutocomplete('val', areaCodes)\n        .metaformMultivalueAutocomplete('option', 'customSource', (input, callback) => {\n          this.searchCodes(\"Municipality,Province,HospitalRegions,BusinessRegions\", input.term + '*')\n            .then((codes) => {\n              callback(codes.map((areaCode) => {\n                return {\n                  value: `${areaCode.type}:${areaCode.code}`,\n                  label: this.getCodeNameWithType(areaCode)\n                };\n              }));\n            })\n            .catch((err) => {\n              tinyMCE.activeEditor.windowManager.alert(err);\n            });\n        });\n    }\n    \n    /**\n     * Translates language list to be suitable for form\n     * \n     * @param {Array} languages language codes\n     * @returns {Promise} promise for language items\n     */\n    languagesToForm(languages) {\n      const languageQuery = languages.map((language) => {\n        return `code:${language}`;\n      }).join(' ');\n      \n      return this.searchCodes(\"Language\", `+(${languageQuery})`)\n        .then((languageQueryResult) => {\n          const languageMap = {};\n          languageQueryResult.forEach((queryResult) => {\n            languageMap[queryResult.code] = this.getLocalizedValue(queryResult.names, 'fi');\n          });\n          \n          return languages.map((language) => {\n            return {\n              value: language,\n              label: languageMap[language] || language\n            };\n          });\n        });\n    }\n    \n    /**\n     * Translates areas to be suitable for form\n     * \n     * @param {Array} areas areas\n     * @returns {Array} area items\n     */\n    areasToForm(areas) {\n      const areaCodes = [];\n      areas.forEach((area) => {\n        if (area.type !== 'Municipality') {\n          areaCodes.push({\n            value: `${area.type}:${area.code}`,\n            label: this.getCodeNameWithType(area)\n          });\n        } else {\n          area.municipalities.forEach((municipality) => {\n            areaCodes.push({\n              value: `Municipality:${municipality.code}`,\n              label: this.getMunicipalityNameWithType(municipality)\n            });\n          });\n        }\n      });\n\n      return areaCodes;\n    }\n    \n    /**\n     * Translates areas from form to be suitable for REST\n     * \n     * @param {String} areaType area type \n     * @param {Array} areas array of area values\n     * @returns {Array} result\n     */\n    areasFromForm(areaType, areas) {\n      if (areaType === 'AreaType') {\n        let mucicipalitiesIndex = -1;\n        const result = [];\n        \n        (areas||'').split(',').forEach((area) => {\n          const parts = area.split(':');\n          const type = parts[0];\n          const code = parts[1];\n          \n          if (type === 'Municipality') {\n            if (mucicipalitiesIndex > -1) {\n              result[mucicipalitiesIndex].municipalities.push({\n                code: code\n              });\n            } else {\n              mucicipalitiesIndex = result.push({\n                'type': 'Municipality',\n                'municipalities': [{\n                  code: code\n                }]\n              }) - 1;\n            }\n          } else {\n            result.push({\n              type: type,\n              code: code\n            });\n          }\n        });\n        \n        return result;\n      }\n    }\n    \n    splitSearchTerms(search) {\n      if (!search) {\n        return null;\n      }\n\n      const searchTerms = _.map(search.replace(/\\ {1,}/g, ' ').split(' '), (term) => {\n        return `+(${term}*)`;\n      });\n\n      return searchTerms.join(' ');\n    }\n    \n    trigger (event, data) {\n      this.listeners.forEach((listener) => {\n        if (listener.event === event) {\n          listener.callable(data||{});\n        }\n      });\n    }\n    \n    on (event, callable) {\n      this.listeners.push({\n        event: event,\n        callable: callable\n      });\n    }\n    \n  }\n  \n  window.KuntaApiAbstractEditDialog = KuntaApiAbstractEditDialog;\n  \n})(jQuery);"]}