{"version":3,"sources":["../src/kunta-api-abstract-edit-plugin-dialog/js/abstract-edit-dialog.js"],"names":["$","KuntaApiAbstractEditDialog","editor","supportedLocales","localeNames","serviceHourTypeNames","dayNames","listeners","locale","type","index","short","name","substring","serviceHour","getServiceHourTypeName","serviceHourType","console","log","result","isClosed","openingHour","length","openFrom","from","openTo","to","validFrom","validTo","formatDateWithTime","formatDateWithTimes","additionalInformation","getAnyLocalizedValue","openingHours","map","formatOpeningHour","join","dateTime","moment","format","date","time","formatDate","startTime","endTime","start","dailyOpeningTime","dayFrom","getDayName","dayTo","viewModel","formValues","callback","dialog","attr","title","dialogContents","addClass","html","mfRender","appendTo","modal","draggable","width","window","height","buttons","text","click","find","metaform","forEach","value","tabs","formTabValues","dialogTabs","tab","tabId","id","append","openTabbedMetaformDialog","getLocaleName","Promise","resolve","reject","post","ajaxurl","response","JSON","parse","fail","responseText","statusText","types","search","codes","splitSearchTerms","executeSearch","action","codeItem","getLocalizedValue","names","getCodeTypeName","municipality","contents","Ok","values","i","language","property","phones","filter","phone","number","Object","assign","isFinnishServiceNumber","emails","getLocalizedValues","webPages","webPage","url","localeWebPages","getLocalizedWebPages","resultProperty","localeValues","formProperty","setLocalizedPropertyValue","resultField","resultItem","push","defaultValue","filterFunction","mapFunction","tableValues","mappedValues","concat","sections","section","fields","field","localeVariableIndex","indexOf","splice","replace","string","Date","element","languageCodes","metaformMultivalueAutocomplete","input","searchCodes","term","then","code","label","catch","err","tinyMCE","activeEditor","windowManager","alert","areaCodes","areaCode","getCodeNameWithType","languages","languageQuery","languageQueryResult","languageMap","queryResult","areas","area","municipalities","getMunicipalityNameWithType","areaType","mucicipalitiesIndex","split","parts","searchTerms","_","linkedInputsNames","linkedInputsSelector","on","onLinkedInputChange","bind","event","data","listener","callable","service","stringify","val","is","change","linkedInputs","checked","elementValue","prop","target","closest","updateLinkedCheckbox","updateLinkedRadio","updateLinkedInput","jQuery"],"mappings":"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","file":"abstract-edit-dialog.js","sourcesContent":["/* jshint esversion: 6 */\n/* global ajaxurl, moment, Promise */\n(($) => {\n  'use strict';\n  \n  class KuntaApiAbstractEditDialog {\n    \n    /**\n     * Constructs abstract dialog class\n     * \n     * @param {type} editor TinyMCE editor instance\n     */\n    constructor(editor) {\n      this.supportedLocales = ['fi', 'en', 'sv'];\n      this.localeNames = {\n        'fi': 'Suomi',\n        'en': 'Englanti',\n        'sv': 'Ruotsi'\n      };\n      \n      this.serviceHourTypeNames = {\n        'OverMidnight': 'Päivystys',\n        'DaysOfTheWeek': 'Normaali',\n        'Exceptional': 'Poikkeus'\n      };\n      \n      this.dayNames = {\n        0: 'Sunnuntai',\n        1: 'Maanantai',\n        2: 'Tiistai',\n        3: 'Keskiviikko',\n        4: 'Torstai',\n        5: 'Perjantai',\n        6: 'Lauantai'\n      };\n      \n      this.editor = editor;\n      this.listeners = [];\n    }\n    \n    getLocaleName(locale) {\n      return this.localeNames[locale];\n    }\n    \n    getServiceHourTypeName(type) {\n      return this.serviceHourTypeNames[type];\n    }\n    \n    getDayName(index, short) {\n      const name = this.dayNames[index];\n      if (short) {\n        return name.substring(0, 2);\n      }\n      \n      return name;\n    }\n    \n    formatServiceHour(serviceHour) {\n      const type = this.getServiceHourTypeName(serviceHour.serviceHourType);\n      \n      if (serviceHour.serviceHourType === 'Exceptional') {\n        console.log(\"serviceHour\", serviceHour);\n\n        let result = `(${type})`;\n        \n        if (serviceHour.isClosed) {\n          result += ' Suljettu';\n        }\n        \n        const openingHour = serviceHour.openingHour && serviceHour.openingHour.length ? serviceHour.openingHour[0] : null;\n        const openFrom = openingHour ? openingHour.from : null;\n        const openTo = openingHour ? openingHour.to : null;\n        \n        if (serviceHour.validFrom && serviceHour.validTo) {\n          result += ` ${this.formatDateWithTime(serviceHour.validFrom, openFrom)} - ${this.formatDateWithTime(serviceHour.validTo, openTo)}`;\n        } else if (serviceHour.validFrom) {\n          result += ` ${this.formatDateWithTimes(serviceHour.validFrom, openFrom, openTo)}`;\n        }\n        \n        const additionalInformation = this.getAnyLocalizedValue(serviceHour.additionalInformation);\n        if (additionalInformation) {\n          return `${result} - ${additionalInformation}`;\n        }\n        \n        return result;\n      } else {\n        if (serviceHour.openingHour.length === 0 && !serviceHour.isClosed) {\n          return `(${type}) Aina avoinna (24/7)`;\n        }\n        \n        const openingHours = (serviceHour.openingHour||[]).map((openingHour) => {\n          return this.formatOpeningHour(openingHour);\n        });\n\n        return `(${type}) ${openingHours.join(',')}`;\n      }\n    }\n    \n    formatDateTime(dateTime) {\n      return moment(dateTime).locale('fi').format('lll');\n    }\n    \n    formatDate(date) {\n      return moment(date).locale('fi').format('ll');\n    }\n    \n    formatDateWithTime(date, time) {\n      console.log(\"formatDateWithTime\", date, time);\n\n      const result = this.formatDate(date);\n      if (time) {\n        return `${result} ${time}`;\n      }\n      console.log(\"result\", result);\n      \n      return result;\n    }\n    \n    formatDateWithTimes(date, startTime, endTime) {\n      const start = this.formatDateWithTime(date, startTime);\n      return endTime ? `${start} - ${endTime}` : start;\n    }\n    \n    formatOpeningHour(dailyOpeningTime) {\n      if (!dailyOpeningTime) {\n        return null;\n      }\n      \n      if (dailyOpeningTime.dayFrom === null) {\n        return '';\n      } else {\n        let result = this.getDayName(dailyOpeningTime.dayFrom, true);\n\n        if (dailyOpeningTime.dayTo && dailyOpeningTime.dayTo !== dailyOpeningTime.dayFrom) {\n          result += ' - ' + this.getDayName(dailyOpeningTime.dayTo, true);\n        }\n\n        if (dailyOpeningTime.from) {\n          result += ' ' + dailyOpeningTime.from;\n        }\n\n        if (dailyOpeningTime.to) {\n          result += ' - ' + dailyOpeningTime.to;\n        }\n\n        return result;\n      }\n    }\n    \n    openMetaformDialog(viewModel, formValues, callback) {\n      const dialog = $('<div>')\n        .attr({\n          'title': viewModel.title\n        });\n      \n      const dialogContents = $('<div>')\n        .addClass('container-fluid')\n        .html(mfRender({\n          viewModel: viewModel,\n          formValues: formValues\n        }))\n        .appendTo(dialog);\n      \n      $(dialog).dialog({\n        modal: true,\n        draggable: false,\n        width: $(window).width() * 0.9,\n        height: $(window).height() * 0.9,\n        buttons: [{\n          text: \"Tallenna\",\n          click: () => {\n            const formValues = {};\n            \n            $(dialog).find(`form.metaform`).metaform('val', true).forEach((value) => {\n              formValues[value.name] = value.value;\n            });\n            \n            callback(formValues);\n            $(dialog).dialog(\"close\");\n          }\n        }, {\n          text: \"Peruuta\",\n          click: () => {\n            $(dialog).dialog(\"close\");\n          }\n        }]\n      });\n       \n      $(dialog).find('form.metaform').metaform();\n      \n      return dialog;\n    }\n    \n    openTabbedMetaformDialog(tabs, viewModel, formTabValues, callback) {\n      const dialog = $('<div>')\n        .attr({\n          'title': viewModel.title\n        });\n      \n      const dialogContents = $('<div>')\n        .addClass('container-fluid')\n        .appendTo(dialog);\n      \n      const dialogTabs = $('<ul>').appendTo(dialogContents);\n     \n      tabs.forEach((tab) => {\n        const tabId = tab.id;\n        \n        $('<li>')\n          .appendTo(dialogTabs)\n          .append($('<a>').attr('href', `#${tabId}`).text(tab.title));\n\n        $('<div>')\n          .attr('id', tabId)\n          .html(mfRender({\n            viewModel: viewModel,\n            formValues: formTabValues[tab.id]\n          }))\n          .appendTo(dialogContents);\n      });\n      \n      dialogContents.tabs();\n      \n      $(dialog).dialog({\n        modal: true,\n        draggable: false,\n        width: $(window).width() * 0.9,\n        height: $(window).height() * 0.9,\n        buttons: [{\n          text: \"Tallenna\",\n          click: () => {\n            callback();\n          }\n        }, {\n          text: \"Peruuta\",\n          click: () => {\n            $(dialog).dialog(\"close\");\n          }\n        }]\n      });\n       \n      $(dialog).find('form.metaform').metaform();\n      \n      return dialog;\n    }\n    \n    openLocalizedMetaformDialog(viewModel, formValues, callback) {\n      const formTabValues = {};\n      \n      this.supportedLocales.forEach((locale) => {\n        formTabValues[`locale-tab-${locale}`] = formValues[locale];\n      });\n      \n      const dialog = this.openTabbedMetaformDialog(this.supportedLocales.map((locale) => {\n        return {\n          id: `locale-tab-${locale}`,\n          title: this.getLocaleName(locale)\n        };\n      }), viewModel, formTabValues, () => {\n        const formValues = {};\n        this.supportedLocales.forEach((locale) => {\n          formValues[locale] = {};\n          $(dialog).find(`#locale-tab-${locale} form.metaform`).metaform('val', true).forEach((value) => {\n            formValues[locale][value.name] = value.value;\n          });\n        });\n\n        callback(formValues);\n      });\n      \n      return dialog;\n    }\n    \n    /**\n     * Finds an organization by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for organization\n     */\n    findOrganization(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_find_organization',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    searchCodes(types, search) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_search_codes',\n          'types': types,\n          'search': search\n        }, (response) => {\n          const codes = JSON.parse(response);\n          resolve(codes);\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });\n    }\n    \n    searchOrganizations(search) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_search_organizations',\n          'search': this.splitSearchTerms(search)\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });\n    }\n    \n    /**\n     * Finds an electronic service channel by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for electronic service channel\n     */\n    findElectronicServiceChannel(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_load_electronic_service_channel',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    /**\n     * Finds an webpage service channel by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for webpage service channel\n     */\n    findWebPageServiceChannel(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_load_webpage_service_channel',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    /**\n     * Finds an printable form service channel by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for webpage service channel\n     */\n    findPrintableFormServiceChannel(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_load_printable_form_service_channel',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    /**\n     * Finds an printable form service channel by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for webpage service channel\n     */\n    findPhoneServiceChannel(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_load_phone_service_channel',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n    \n    /**\n     * Finds an service location service channel by id\n     * \n     * @param {String} id organization id\n     * @returns {Promise} promise for webpage service channel\n     */\n    findServiceLocationServiceChannel(id) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': 'kunta_api_load_service_location_service_channel',\n          'id': id\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });      \n    }\n        \n    /**\n     * Search electronic service channels by free text query\n     * \n     * @param {String} search search string\n     * @returns {Promise} promise for found electronic service channels\n     */\n    searchElectronicServiceChannels(search) {\n      return this.executeSearch('search_electronic_service_channels', search); \n    }\n    \n    /**\n     * Search phone service channels by free text query\n     * \n     * @param {String} search search string\n     * @returns {Promise} promise for found service channels\n     */\n    searchPhoneServiceChannels(search) {\n      return this.executeSearch('search_phone_service_channels', search); \n    }\n    \n    /**\n     * Search printable form service channels by free text query\n     * \n     * @param {String} search search string\n     * @returns {Promise} promise for found service channels\n     */\n    searchPrintableFormServiceChannels(search) {\n      return this.executeSearch('search_printable_form_service_channels', search); \n    }\n    \n    /**\n     * Search web page service channels by free text query\n     * \n     * @param {String} search search string\n     * @returns {Promise} promise for found service channels\n     */\n    searchWebPageServiceChannels(search) {\n      return this.executeSearch('search_web_page_service_channels', search); \n    }\n    \n    /**\n     * Search location service service channels by free text query\n     * \n     * @param {String} search search string\n     * @returns {Promise} promise for found service channels\n     */\n    searchServiceLocationServiceChannels(search) {\n      return this.executeSearch('search_service_location_channels', search); \n    }\n    \n    executeSearch(action, search) {\n      return new Promise((resolve, reject) => {\n        $.post(ajaxurl, {\n          'action': `kunta_api_${action}`,\n          'search': this.splitSearchTerms(search)\n        }, (response) => {\n          resolve(JSON.parse(response));\n        })\n        .fail((response) => {\n          reject(response.responseText || response.statusText);\n        });\n      });\n    }\n    \n    getCodeTypeName(type) {\n       switch (type) {\n        case 'Municipality':\n          return 'kunta';\n        case 'Province':\n          return 'maakunta';\n        case 'HospitalRegions':\n          return 'sairaanhoitopiiri';\n        case 'BusinessRegions':\n          return 'yrityspalvelujen seutualue';\n        case 'Country':\n          return 'maa';\n        case 'Language':\n          return 'kieli';\n        case 'Postal':\n          return 'postinumero';\n      }\n    }\n    \n    getCodeNameWithType(codeItem) {\n      const name = this.getLocalizedValue(codeItem.name || codeItem.names, 'fi');\n      const type = this.getCodeTypeName(codeItem.type);\n      return `${name} (${type})`;\n    }\n    \n    getMunicipalityNameWithType(municipality) {\n      const name = this.getLocalizedValue(municipality.names, 'fi');\n      const type = this.getCodeTypeName('Municipality');\n      return `${name} (${type})`;\n    }\n    \n    showError(title, text) {\n      const contents = $('<div>')\n        .addClass('error')\n        .text(text);\n      \n      const dialog = $('<div>')\n        .attr('title', title)\n        .append(contents)\n        .dialog({\n          modal: true,\n          draggable: false,\n          width: 600,\n          height: 350,\n          buttons: {\n            Ok: () => {\n              $(dialog).dialog( \"close\" );\n            }\n          }\n        });\n    }\n    \n    getTypedLocalizedValue(values, locale, type) {\n      if (!values) {\n        return null;\n      }\n      \n      for (let i = 0; i < values.length; i++) {\n        if (locale === values[i].language && type === values[i].type) {\n          return values[i].value;\n        }\n      }\n      \n      return null;\n    }\n    \n    /**\n     * Returns localized value\n     * \n     * @param {Array} values array containing localized values\n     * @param {String} locale Locale\n     * @param {String} property property containing value. Defaults to 'value'\n     * @returns {unresolved}\n     */\n    getLocalizedValue(values, locale, property) {\n      if (!values) {\n        return null;\n      }\n      \n      for (let i = 0; i < values.length; i++) {\n        if (locale === values[i].language) {\n          return values[i][property || 'value'];\n        }\n      }\n      \n      return null;\n    }\n    \n    getAnyLocalizedValue(values) {\n      for (let i = 0; i < this.supportedLocales.length; i++) {\n        const result = this.getLocalizedValue(values, this.supportedLocales[i]);\n        if (result) {\n          return result;\n        }\n      }\n      \n      return null;\n    }\n    \n    /**\n     * Returns list of phones in specified locale\n     * \n     * @param {Array} phones phones\n     * @param {String} locale locale\n     * @returns {Array} list of phones in specified locale\n     */\n    getLocalizedPhoneNumbers(phones, locale) {\n      return (phones || [])\n        .filter((phone) => {\n          return phone.number && phone.language === locale;\n        })\n        .map((phone) => {\n          return Object.assign({}, phone, {\n            isFinnishServiceNumber: phone.isFinnishServiceNumber ? \"true\" : \"false\"\n          });\n        });\n    }\n    \n    /**\n     * Returns list of emails in specified locale\n     * \n     * @param {Array} emails emails\n     * @param {String} locale locale\n     * @returns {Array} list of emails in specified locale\n     */\n    getLocalizedEmails(emails, locale) {\n      return this.getLocalizedValues(emails, locale);  \n    }\n    \n    /**\n     * Returns list of values in specified locale\n     * \n     * @param {Array} values values\n     * @param {String} locale locale\n     * @returns {Array} list of values in specified locale\n     */\n    getLocalizedValues(values, locale) {\n      return (values || []).filter((value) => {\n        return value.value && value.language === locale;\n      });\n    }\n    \n    /**\n     * Returns list of web pages in specified locale\n     * \n     * @param {Array} webPages web pages\n     * @param {String} locale locale\n     * @returns {Array} list of web pages in specified locale\n     */\n    getLocalizedWebPages(webPages, locale) {\n      return (webPages || []).filter((webPage) => {\n        return webPage.url && webPage.language === locale;\n      });\n    }\n\n    /**\n     * Returns web page url by locale\n     * \n     * @param {Array} webPages web pages\n     * @param {String} locale locale\n     * @return {String} web page url or null if not found\n     */\n    getLocalizedWebPageUrl(webPages, locale) {\n      const localeWebPages = this.getLocalizedWebPages(webPages, locale);\n      if (localeWebPages && localeWebPages.length) {\n        return localeWebPages[0].url;\n      }\n\n      return null;\n    }\n\n    /**\n     * Sets localized value (e.g. service requirements) value\n     * \n     * @param result result object\n     * @param resultProperty result object property\n     * @param localeValues locale values from form\n     * @param formProperty form property\n     * @param language locale\n     */\n    setLocalizedWebPages(result, resultProperty, localeValues, formProperty, language) {\n      this.setLocalizedPropertyValue(result, resultProperty, \"url\", localeValues, formProperty, language);\n    }\n\n    /**\n     * Sets localized property value\n     * \n     * @param result result object\n     * @param resultProperty result object property\n     * @param resultField value field in result item\n     * @param localeValues locale values from form\n     * @param formProperty form property\n     * @param language locale\n     */\n    setLocalizedPropertyValue(result, resultProperty, resultField, localeValues, formProperty, language) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = [];\n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      for (let i = 0; i < result[resultProperty].length; i++) {\n        if (result[resultProperty][i].language === language) {\n          result[resultProperty][i].value = value;\n          return;\n        }\n      }\n\n      const resultItem = {\n        language: language\n      };\n\n      resultItem[resultField] = value;\n      result[resultProperty].push(resultItem);\n    }\n    \n    /**\n     * Converts boolean from form into boolean\n     * \n     * @param {String} value form value\n     * @param {Boolean} defaultValue default value\n     * @returns {Boolean} boolean\n     */\n    getFormBooleanValue(value, defaultValue) {\n      if (value === 'true') {\n        return true;\n      } else if (value === 'false') {\n        return false;\n      }\n      \n      return defaultValue;\n    }\n    \n    /**\n     * Sets localized value (e.g. service requirements) value\n     * \n     * @param {type} result result object\n     * @param {type} resultProperty result object property\n     * @param {type} localeValues locale values from form\n     * @param {type} formProperty form property\n     * @param {type} language locale\n     */\n    setLocalizedValue(result, resultProperty, localeValues, formProperty, language) {\n      this.setLocalizedPropertyValue(result, resultProperty, \"value\", localeValues, formProperty, language);\n    }\n    \n    /**\n     * Sets typed localized value (e.g. service description) value\n     * \n     * @param {type} result result object\n     * @param {type} resultProperty result object property\n     * @param {type} localeValues locale values from form\n     * @param {type} formProperty form property\n     * @param {type} language locale\n     * @param {type} type type\n     */\n    setTypedLocalizedValue(result, resultProperty, localeValues, formProperty, language, type) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = [];\n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      for (let i = 0; i < result[resultProperty].length; i++) {\n        if (result[resultProperty][i].language === language && result[resultProperty][i].type === type) {\n          result[resultProperty][i].value = value;\n          return;\n        }\n      }\n      \n      result[resultProperty].push({\n        value: value,\n        language: language,\n        type: type\n      });\n    }\n    \n    setLocalizedTableValues(result, resultProperty, localeValues, formProperty, language, filterFunction, mapFunction) {\n      if (!result[resultProperty]) {\n        result[resultProperty] = []; \n      }\n      \n      const value = localeValues[formProperty];\n      if (!value) {\n        return;\n      }\n      \n      let tableValues = JSON.parse(value);\n      \n      if (filterFunction) {\n        tableValues = tableValues.filter(filterFunction);\n      }\n      \n      const mappedValues = tableValues.map(mapFunction ? mapFunction : (value) => {\n        return Object.assign({\n          language: language\n        }, value);\n      }) || [];\n      \n      result[resultProperty] = result[resultProperty].concat(mappedValues); \n    }\n    \n    prepareViewModel(viewModel) {\n      (viewModel.sections||[]).forEach((section) => {\n        (section.fields||[]).forEach((field, index) => {\n          const localeVariableIndex = field.name.indexOf('{LOCALE}');\n          if (localeVariableIndex !== -1) {\n            section.fields.splice(index, 1);\n            \n            this.supportedLocales.forEach((locale) => {\n              section.fields.splice(index, 0, Object.assign({}, field, {\n                name: field.name.replace(/\\{LOCALE\\}/g, locale),\n                title: field.title.replace(/\\{LOCALE\\}/g, this.getLocaleName(locale))\n              }));   \n            });\n          }\n        });\n      });\n      \n      return viewModel;\n    }\n    \n    parseIsoDate(string) {\n      if (!string) {\n        return null;\n      }\n      \n      return new Date(Date.parse(string));\n    }\n    \n    /**\n     * Creates autocomplete field for selecting languages\n     * \n     * @param {jQuery} element autocomplete element\n     * @param {Array} languageCodes language codes\n     */\n    createLanguagesAutocomplete(element, languageCodes) {\n      element\n        .metaformMultivalueAutocomplete('val', languageCodes)\n        .metaformMultivalueAutocomplete('option', 'customSource', (input, callback) => {\n          this.searchCodes(\"Language\", input.term + '*')\n            .then((codes) => {\n              callback(codes.map((codeItem) => {\n                return {\n                  value: codeItem.code,\n                  label: this.getLocalizedValue(codeItem.names, 'fi')\n                };\n              }));\n            })\n            .catch((err) => {\n              tinyMCE.activeEditor.windowManager.alert(err);\n            });\n        });\n    }\n    \n    /**\n     * Creates autocomplete field for selecting areas\n     * \n     * @param {jQuery} element autocomplete element\n     * @param {Array} areaCodes area codes\n     */\n    createAreasAutocomplete(element, areaCodes) {\n      element\n        .metaformMultivalueAutocomplete('val', areaCodes)\n        .metaformMultivalueAutocomplete('option', 'customSource', (input, callback) => {\n          this.searchCodes(\"Municipality,Province,HospitalRegions,BusinessRegions\", input.term + '*')\n            .then((codes) => {\n              callback(codes.map((areaCode) => {\n                return {\n                  value: `${areaCode.type}:${areaCode.code}`,\n                  label: this.getCodeNameWithType(areaCode)\n                };\n              }));\n            })\n            .catch((err) => {\n              tinyMCE.activeEditor.windowManager.alert(err);\n            });\n        });\n    }\n    \n    /**\n     * Translates language list to be suitable for form\n     * \n     * @param {Array} languages language codes\n     * @returns {Promise} promise for language items\n     */\n    languagesToForm(languages) {\n      const languageQuery = languages.map((language) => {\n        return `code:${language}`;\n      }).join(' ');\n      \n      return this.searchCodes(\"Language\", `+(${languageQuery})`)\n        .then((languageQueryResult) => {\n          const languageMap = {};\n          languageQueryResult.forEach((queryResult) => {\n            languageMap[queryResult.code] = this.getLocalizedValue(queryResult.names, 'fi');\n          });\n          \n          return languages.map((language) => {\n            return {\n              value: language,\n              label: languageMap[language] || language\n            };\n          });\n        });\n    }\n    \n    /**\n     * Translates areas to be suitable for form\n     * \n     * @param {Array} areas areas\n     * @returns {Array} area items\n     */\n    areasToForm(areas) {\n      const areaCodes = [];\n      areas.forEach((area) => {\n        if (area.type !== 'Municipality') {\n          areaCodes.push({\n            value: `${area.type}:${area.code}`,\n            label: this.getCodeNameWithType(area)\n          });\n        } else {\n          area.municipalities.forEach((municipality) => {\n            areaCodes.push({\n              value: `Municipality:${municipality.code}`,\n              label: this.getMunicipalityNameWithType(municipality)\n            });\n          });\n        }\n      });\n\n      return areaCodes;\n    }\n    \n    /**\n     * Translates areas from form to be suitable for REST\n     * \n     * @param {String} areaType area type \n     * @param {Array} areas array of area values\n     * @returns {Array} result\n     */\n    areasFromForm(areaType, areas) {\n      if (areaType === 'AreaType') {\n        let mucicipalitiesIndex = -1;\n        const result = [];\n        \n        (areas||'').split(',').forEach((area) => {\n          const parts = area.split(':');\n          const type = parts[0];\n          const code = parts[1];\n          \n          if (type === 'Municipality') {\n            if (mucicipalitiesIndex > -1) {\n              result[mucicipalitiesIndex].municipalities.push({\n                code: code\n              });\n            } else {\n              mucicipalitiesIndex = result.push({\n                'type': 'Municipality',\n                'municipalities': [{\n                  code: code\n                }]\n              }) - 1;\n            }\n          } else {\n            result.push({\n              type: type,\n              code: code\n            });\n          }\n        });\n        \n        return result;\n      }\n    }\n    \n    splitSearchTerms(search) {\n      if (!search) {\n        return null;\n      }\n\n      const searchTerms = _.map(search.replace(/\\ {1,}/g, ' ').split(' '), (term) => {\n        return `+(${term}*)`;\n      });\n\n      return searchTerms.join(' ');\n    }\n    \n    linkInputs(dialog, linkedInputsNames) {\n      const linkedInputsSelector = linkedInputsNames.map((name) => {\n        return `input[name=\"${name}\"]`;\n      }).join(',');\n      \n      $(dialog).on('change', linkedInputsSelector, this.onLinkedInputChange.bind(this)); \n    }\n    \n    trigger (event, data) {\n      this.listeners.forEach((listener) => {\n        if (listener.event === event) {\n          listener.callable(data||{});\n        }\n      });\n    }\n    \n    saveService(service, callback) {\n      $.post(ajaxurl, {\n        'action': 'kunta_api_save_service',\n        'service': JSON.stringify(service)\n      }, (response) => {\n        callback();\n      })\n      .fail((response) => {\n        callback(response.responseText || response.statusText || \"Unknown error occurred\");\n      });\n    }\n    \n    updateLinkedCheckbox(dialog, input, name) {\n      const value = input.val();\n      dialog.find(`*[name=\"${name}\"]`)\n        .filter((index, element) => {\n          return (!$(element).is(input)) && (value !== $(element).val());\n        })\n        .val(value)\n        .change();\n    }\n    \n    updateLinkedRadio(dialog, input, name) {\n      const value = input.val();\n      \n      const linkedInputs = dialog.find(`*[name=\"${name}\"]`).filter((index, element) => {\n        const checked = $(element).is(':checked');\n        const elementValue = $(element).attr('value');\n        \n        if (elementValue === value && !checked) {\n          return true;\n        }\n        \n        return false;\n      })\n      .prop('checked', 'checked')\n      .change();\n    }\n    \n    updateLinkedInput(dialog, input, name) {\n      const value = input.val();\n      dialog.find(`*[name=\"${name}\"]`)\n        .filter((index, element) => {\n          return (!$(element).is(input)) && (value !== $(element).val());\n        })\n        .val(value)\n        .change();\n    }\n    \n    onLinkedInputChange(event) {\n      const input = $(event.target);\n      const name = input.attr('name');\n      const dialog = input.closest('.ui-dialog-content');\n      const type = input.attr('type');\n      \n      switch (type) {\n        case 'checkbox':\n          this.updateLinkedCheckbox(dialog, input, name);\n        break;\n        case 'radio':\n          this.updateLinkedRadio(dialog, input, name);\n        break;\n        default:\n          this.updateLinkedInput(dialog, input, name);\n        break;\n      }\n    }\n    \n    on (event, callable) {\n      this.listeners.push({\n        event: event,\n        callable: callable\n      });\n    }\n    \n  }\n  \n  window.KuntaApiAbstractEditDialog = KuntaApiAbstractEditDialog;\n  \n})(jQuery);"]}